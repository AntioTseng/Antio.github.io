/*!
    Title: Dev Portfolio Template
    Version: 1.2.2
    Last Change: 03/25/2020
    Author: Ryan Fitzgerald
    Repo: https://github.com/RyanFitzgerald/devportfolio-template
    Issues: https://github.com/RyanFitzgerald/devportfolio-template/issues

    Description: This file contains all the scripts associated with the single-page
    portfolio website.
*/
!function (n) { n("html").removeClass("no-js"), n("header a").click(function (e) { if (!n(this).hasClass("no-scroll")) { e.preventDefault(); var t = n(this).attr("href"), i = n(t).offset().top; n("html, body").animate({ scrollTop: i + "px" }, +Math.abs(window.pageYOffset - n(t).offset().top)), n("header").hasClass("active") && n("header, body").removeClass("active") } }), n("#to-top").click(function () { n("html, body").animate({ scrollTop: 0 }, 500) }), n("#lead-down span").click(function () { var e = n("#lead").next().offset().top; n("html, body").animate({ scrollTop: e + "px" }, 500) }), n("#experience-timeline").each(function () { $this = n(this), $userContent = $this.children("div"), $userContent.each(function () { n(this).addClass("vtimeline-content").wrap('<div class="vtimeline-point"><div class="vtimeline-block"></div></div>') }), $this.find(".vtimeline-point").each(function () { n(this).prepend('<div class="vtimeline-icon"><i class="fa fa-map-marker"></i></div>') }), $this.find(".vtimeline-content").each(function () { var e = n(this).data("date"); e && n(this).parent().prepend('<span class="vtimeline-date">' + e + "</span>") }) }), n("#mobile-menu-open").click(function () { n("header, body").addClass("active") }), n("#mobile-menu-close").click(function () { n("header, body").removeClass("active") }), n("#view-more-projects").click(function (e) { e.preventDefault(), n(this).fadeOut(300, function () { n("#more-projects").fadeIn(300) }) }) }(jQuery);

// 設定輪播的數量，這裡假設有N個
var carouselCount = 15;

for (var i = 1; i <= carouselCount; i++) {
    initializeCarousel(i);
}

function initializeCarousel(index) {
    var currentImageIndex = 0;
    var carouselImages = document.querySelectorAll('#carousel' + index + ' img');
    var totalImages = carouselImages.length;

    function showImage(index) {
        carouselImages.forEach(function (img, i) {
            img.style.display = i === index ? 'block' : 'none';
        });
    }

    function prevImage() {
        currentImageIndex = (currentImageIndex - 1 + totalImages) % totalImages;
        showImage(currentImageIndex);
    }

    function nextImage() {
        currentImageIndex = (currentImageIndex + 1) % totalImages;
        showImage(currentImageIndex);
    }

    showImage(currentImageIndex);

    // 這裡可以添加其他輪播的事件綁定
    var prevBtn = document.querySelector('#carousel' + index + ' .left-btn');
    var nextBtn = document.querySelector('#carousel' + index + ' .right-btn');

    if (prevBtn && nextBtn) {
        prevBtn.addEventListener('click', prevImage);
        nextBtn.addEventListener('click', nextImage);
    }
}

// PROJECT CATE BUTTON // 
document.addEventListener("DOMContentLoaded", function () {
    const categoryBtns = document.querySelectorAll(".category-btn");
    const projects = document.querySelectorAll(".project");

    categoryBtns.forEach(btn => {
        btn.addEventListener("click", function () {
            const selectedCategory = this.getAttribute("data-category");

            // 隱藏所有專案
            projects.forEach(project => {
                const projectCategory = project.getAttribute("data-category");
                if (selectedCategory === "full" || projectCategory === selectedCategory) {
                    project.style.display = "block";
                } else {
                    project.style.display = "none";
                }
            });

            // 切換按鈕的 active 狀態
            categoryBtns.forEach(b => b.classList.remove("active"));
            this.classList.add("active");
        });
    });
});


// Get buttons and content elements
const englishButton = document.getElementById('englishButton');
const chineseButton = document.getElementById('chineseButton');
const content = document.getElementById('content');

// Add event listeners to buttons
englishButton.addEventListener('click', function () {
    // Load English version
    loadLanguage('en');
});

chineseButton.addEventListener('click', function () {
    // Load Chinese version
    loadLanguage('zh');
});

// Function to load language
function loadLanguage(lang) {
    // Determine which language version to load
    const url = lang === 'en' ? 'index.html' : 'index_zh.html';

    // Update browser URL
    history.pushState({}, '', url);

    // Create a new XMLHttpRequest object
    const xhr = new XMLHttpRequest();

    // Set up the request
    xhr.open('GET', url, true);

    // Define what happens on successful data submission
    xhr.onload = function () {
        // Check if request was successful
        if (xhr.status >= 200 && xhr.status < 300) {
            // Replace content with loaded content
            content.innerHTML = xhr.responseText;
        } else {
            console.error('Request failed with status', xhr.status);
        }
    };

    // Define what happens in case of error
    xhr.onerror = function () {
        console.error('Request failed');
    };

    // Send the request
    xhr.send();
}